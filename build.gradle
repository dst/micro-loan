import com.wiredforcode.gradle.spawn.KillProcessTask
import com.wiredforcode.gradle.spawn.SpawnProcessTask

buildscript {
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/libs-snapshot" }
        maven { url "http://dl.bintray.com/vermeulen-mp/gradle-plugins" }
    }

    dependencies {
        classpath "com.wiredforcode:gradle-spawn-plugin:0.5.2"
        classpath "com.wiredforcode:gradle-heroku-plugin:1.0.0"
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:0.3.0"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.0.2.RELEASE"
    }
}

apply plugin: "coveralls"
apply plugin: "eclipse"
apply plugin: "groovy"
apply plugin: "heroku"
apply plugin: "idea"
apply plugin: "jacoco"
apply plugin: "java"
apply plugin: "spawn"
apply plugin: "spring-boot"

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = "micro-loan"
    version = "0.0.1"
}

apply from: "$rootDir/gradle/codeQuality.gradle"
apply from: "$rootDir/gradle/createGitProperties.gradle"
apply from: "$rootDir/gradle/dependencies.gradle"
apply from: "$rootDir/gradle/heroku.gradle"

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

// To build as fast as possible on Heroku
defaultTasks = ["clean", "assemble"]


configurations {
    acceptTestCompile.extendsFrom testCompile
    acceptTestRuntime.extendsFrom testRuntime
}

sourceSets {
    acceptanceTest {
        groovy.srcDir file('src/testAcceptance/groovy')
        resources.srcDir file('src/testAcceptance/resources')
        compileClasspath = sourceSets.main.output + sourceSets.test.output + configurations.acceptTestCompile
        runtimeClasspath = output + compileClasspath + configurations.acceptTestRuntime
    }
}

task startServer(type: SpawnProcessTask, dependsOn: 'assemble') {
    def propFiles = [
            "src/main/resources/application.properties",
            "src/testAcceptance/resources/application-accept.properties"
    ]
    def config = propFiles.join(",")
    def jarFile = "${projectDir}/build/libs/${jar.baseName}-${jar.version}.jar"
    command "java -jar ${jarFile} --spring.config.location=${config}"
    ready "Started Application"
}

task stopServer(type: KillProcessTask)

task acceptanceTest(type: Test) {
    testClassesDir = sourceSets.acceptanceTest.output.classesDir
    classpath = sourceSets.acceptanceTest.runtimeClasspath
    dependsOn startServer
    finalizedBy stopServer
}

check.dependsOn acceptanceTest